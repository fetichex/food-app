  const [activePage, setActivePage] = useState(1)
  const [arrOfCurrButtons, setArrOfCurrButtons] = useState([])

  const pageNumbers = []
  for (let i = 0; i < Math.ceil(allRecipes / recipesPagination); i++) {
    pageNumbers.push(i + 1)
  }

  useEffect(() => {
    let tempPageNumbers = [...arrOfCurrButtons]

    const dotsInitial = '...'
    const dotsLeft = '... '
    const dotsRight = ' ...'

    if (pageNumbers.length < 6) {
      tempPageNumbers = pageNumbers
    } else if (activePage >= 1 && activePage <= 3) {
      tempPageNumbers = [1, 2, 3, 4, dotsInitial, pageNumbers.length]
    } else if (activePage === 4) {
      const sliced = pageNumbers.slice(0, 5)
      tempPageNumbers = [...sliced, dotsInitial, pageNumbers.length]
    } else if (activePage > 4 && activePage < pageNumbers.length - 2) {
      // from 5 to 8 -> (10 - 2)
      console.log('activePage > 4', activePage)
      console.log('pageNumbers.length', pageNumbers.length)

      const sliced1 = pageNumbers.slice(activePage - 2, activePage) // sliced1 (5-2, 5) -> [4,5]
      const sliced2 = pageNumbers.slice(activePage, activePage + 1) // sliced1 (5, 5+1) -> [6]
      console.log('sliced1', sliced1)
      console.log('sliced2', sliced2)
      tempPageNumbers = [
        1,
        dotsLeft,
        ...sliced1,
        ...sliced2,
        dotsRight,
        pageNumbers.length
      ]
      console.log('tempPageNumbers', tempPageNumbers)
      // [1, '...', 4, 5, 6, '...', 10]
    } else if (activePage > pageNumbers.length - 3) {
      // > 7
      const sliced = pageNumbers.slice(pageNumbers.length - 4) // slice(10-4)
      tempPageNumbers = [1, dotsLeft, ...sliced]
      console.log(' > 7')
      console.log('tempPageNumbers', tempPageNumbers)
    } else if (activePage === dotsInitial) {
      setActivePage(arrOfCurrButtons[arrOfCurrButtons.length - 3] + 1)
    } else if (activePage === dotsRight) {
      setActivePage(arrOfCurrButtons[3] + 2)
      console.log('tempPageNumbers dotsRight', tempPageNumbers)
      console.log('arrOfCurrButtons[3] + 2', arrOfCurrButtons[3] + 2)
    } else if (activePage === dotsLeft) {
      setActivePage(arrOfCurrButtons[3] - 2)
      console.log('tempPageNumbers dotsLeft', tempPageNumbers)
      console.log('arrOfCurrButtons[3] - 2', arrOfCurrButtons[3] - 2)
    }

    setArrOfCurrButtons(tempPageNumbers)
  }, [activePage])

  const handlePrevious = () => {
    if (currentPage > 1) {
      pagination(currentPage - 1)
      setActivePage(currentPage - 1)
    }
  }

  const handleNext = () => {
    if (currentPage < pageNumbers.length) {
      pagination(currentPage + 1)
      setActivePage(currentPage + 1)
    }
  }

  const handlePageClick = (page) => {
    console.log('page', page)
    pagination(page)
    setActivePage(page)
  }

  console.log(activePage)